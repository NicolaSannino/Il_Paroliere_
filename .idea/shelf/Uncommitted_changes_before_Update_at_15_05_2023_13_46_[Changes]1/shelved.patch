Index: src/view/CampoGioco.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package view;\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.Dimension;\r\nimport java.awt.Frame;\r\nimport java.awt.Toolkit;\r\nimport java.awt.event.*;\r\nimport java.sql.SQLException;\r\nimport java.util.Iterator;\r\nimport java.util.Random;\r\nimport java.util.Vector;\r\n\r\nimport javax.swing.JButton;\r\nimport javax.swing.JFrame;\r\nimport javax.swing.JLabel;\r\nimport javax.swing.border.Border;\r\nimport model.DBConnection;\r\nimport model.DBConnectionMariaDB;\r\nimport model.Query;\r\nimport javax.swing.JFrame;\r\nimport javax.swing.JToggleButton;\r\nimport java.awt.FlowLayout;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\n\r\n\r\npublic class CampoGioco extends JFrame implements ActionListener{\r\n\tVector<JButton> buttonsclick=new Vector(0,1);\r\n\r\n\tJButton[][] buttons = new JButton[4][4];\r\n\r\n\tJToggleButton toggleButton=new JToggleButton(\"Bottoni\");\r\n\r\n\tprivate char[][] tabella = new char[4][4];\r\n\r\n\tprivate JLabel Testo;\r\n\tprivate JTextField testo;\r\n\r\n\tprivate JButton Tabella, Invio, Annulla;\r\n\tprivate JPanel GrigliaGioco, ContBtn;\r\n\r\n\t//label e classe timer\r\n\tprivate Timer timer;\r\n\tprivate JLabel timeLabel;\r\n\tint minutes=10;\r\n\tint seconds = 480;\r\n\tboolean fine = false;\r\n\r\n\tboolean buttonTesto = true;\r\n\r\n\tpublic CampoGioco(){\r\n\r\n\t\tthis.setTitle(\"Campo da Gioco\");\r\n\r\n\t\tJLabel labelTitolo = new JLabel();\r\n\t\tlabelTitolo.setText(\"Campo Da Gioco Paroliere\");\r\n\t\tlabelTitolo.setForeground(new Color(0, 0, 0));\r\n\t\tlabelTitolo.setFont(new Font(\"MV Boli\", Font.PLAIN, 40));\r\n\r\n\t\tCentraOggetti c=new CentraOggetti();\r\n\t\ttoggleButton.setSize(70,70);\r\n\t\ttoggleButton.addActionListener(this);\r\n\t\tthis.add(toggleButton);\r\n\t\ttoggleButton.setBackground(Color.WHITE);\r\n\t\ttoggleButton.setForeground(Color.GRAY);\r\n\t\ttoggleButton.setPreferredSize(new Dimension(80, 40));\r\n\t\ttoggleButton.setMargin(new Insets(0, 10, 0, 10));\r\n\r\n\t\ttoggleButton.setVisible(true);\r\n\t\tc.centerComponent(toggleButton,20);\r\n\r\n\r\n\r\n\t\tlabelTitolo.setBackground(new Color(123, 50, 250));\r\n\t\tlabelTitolo.setOpaque(true);\r\n\t\t//labelTitolo.setVerticalAlignment(labelTitolo.TOP);\r\n\t\t//labelTitolo.setHorizontalAlignment(labelTitolo.CENTER);\r\n\t\t//labelTitolo.setBounds(550, 10, 400, 70);\r\n\t\tlabelTitolo.setSize(500, 70);\r\n\t\tthis.centerComponent(labelTitolo, 20);\r\n\r\n\t\tGrigliaGioco = new JPanel();\r\n\t\tContBtn = new JPanel();\r\n\t\tGrigliaGioco.setLayout(new GridLayout(4, 4, 10, 10));\r\n\r\n\t\tchar[] consonanti = {'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'z'};\r\n\t\tchar[] vocali = {'a', 'e', 'i', 'o', 'u'};\r\n\t\tint a=0;\r\n\r\n\t\tfor(int i = 1;i < 5;i++){\r\n\t\t\ta++;\r\n\t\t\tfor(int j = 1;j < 5; j++){\r\n\t\t\t\tRandom rand = new Random();\r\n\t\t\t\tint num;\r\n\r\n\t\t\t\tif (a%2 == 0){\r\n\t\t\t\t\tnum = vocali[rand.nextInt(5)];\r\n\t\t\t\t}else{\r\n\t\t\t\t\tnum = consonanti[rand.nextInt(18)];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tTabella = new JButton(\"\"+(char)num);\r\n\t\t\t\ttabella[i-1][j-1]=(char)num;\r\n\t\t\t\tbuttons[i-1][j-1] = Tabella;\r\n\t\t\t\tTabella.setName(\"Btn\"+a);\r\n\t\t\t\tTabella.addActionListener(this);\r\n\t\t\t\tTabella.setSize(50, 50);\r\n\t\t\t\tGrigliaGioco.add(Tabella);\r\n\r\n\t\t\t\ta++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstampaMatrice();\r\n\r\n\t\tGrigliaGioco.setVisible(true);\r\n\t\tGrigliaGioco.setSize(250, 250);\r\n\t\tGrigliaGioco.setBackground(new Color(123, 50, 250));\r\n\t\tthis.centerComponent(GrigliaGioco, 200);\r\n\r\n\t\tBorder border = BorderFactory.createLineBorder(Color.blue, 3);\r\n\r\n\t\tTesto = new JLabel(\"Inserisci lettere\");\r\n\t\ttesto= new JTextField(\"Inserisci lettere\");\r\n\t\ttesto.addFocusListener(new FocusListener() {\r\n\t\t\t\t\t\t\t\t   public void focusGained(FocusEvent e) {\r\n\t\t\t\t\t\t\t\t\t   if (testo.getText().equals(\"Inserisci lettere\")) {\r\n\t\t\t\t\t\t\t\t\t\t   testo.setText(\"\");\r\n\t\t\t\t\t\t\t\t\t\t   buttonTesto=false;\r\n\t\t\t\t\t\t\t\t\t\t   testo.setForeground(Color.BLACK);\r\n\t\t\t\t\t\t\t\t\t   }\r\n\t\t\t\t\t\t\t\t   }\r\n\r\n\t\t\t\t\t\t\t\t   public void focusLost(FocusEvent e) {\r\n\r\n\t\t\t\t\t\t\t\t   }\r\n\t\t\t\t\t\t\t   });\r\n\r\n\t\t\t//testo.setOpaque(false);\r\n\t\tthis.add(Testo);\r\n\t\tthis.add(testo);\r\n\t\ttesto.setVisible(false);\r\n\r\n\t\tFont fontA = new Font (\"Book Antiqua\", Font. BOLD, 15);\r\n\r\n\t\tTesto.setBorder(border);\r\n\t\ttesto.setBorder(border);\r\n\t\t//testo.setVerticalAlignment(labelTitolo.CENTER);\r\n\t\t//testo.setHorizontalAlignment(labelTitolo.CENTER);\r\n\t\t//testo.setSize(200,40);\r\n\t\t//testo.setBackground(new Color(0, 0, 255));\r\n\t\t//testo.setBounds(684,560,130,31);\r\n\t\tTesto.setSize(230,30);\r\n\t\ttesto.setSize(230,30);\r\n\t\tTesto.setFont(fontA);\r\n\t\ttesto.setFont(fontA);\r\n\t\tTesto.setForeground(Color.BLACK);\r\n\t\ttesto.setForeground(Color.BLACK);\r\n\t\ttesto.setOpaque(false);\r\n\t\tthis.centerComponent(Testo, 550);\r\n\t\tthis.centerComponent(testo, 550);\r\n\r\n\t\tInvio = new JButton(\"Cerca Parola\");\r\n\t\tInvio.addActionListener(this);\r\n\t\tInvio.setSize(200,50);\r\n\t\t//this.centerComponent(Invio, 700);\r\n\t\t//this.add(Invio);\r\n\r\n\t\tAnnulla = new JButton(\"Annulla Parola\");\r\n\t\tAnnulla.addActionListener(this);\r\n\t\tAnnulla.setSize(200,80);\r\n\t\t//this.centerComponent(Annulla, 100);\r\n\t\t//this.add(Annulla);\r\n\r\n\t\tContBtn.add(Invio);\r\n\t\tContBtn.add(Annulla);\r\n\t\tContBtn.setVisible(true);\r\n\t\tContBtn.setSize(400,100);\r\n\t\t//ContBtn.setBackground(new Color(123, 50, 250));\r\n\t\tContBtn.setBackground(Color.WHITE);\r\n\t\tthis.centerComponent(ContBtn, 700);\r\n\r\n\t\ttimeLabel = new JLabel(\"00:00\");\r\n\t\ttimeLabel.setFont(new Font(\"MV Boli\", Font.BOLD, 35));\r\n\t\ttimeLabel.setBounds(30, 30, 200,40);\r\n\t\tthis.add(timeLabel);\r\n\r\n\t\ttimer = new Timer(1000, new ActionListener() {\r\n\t\t\tpublic void actionPerformed(ActionEvent e) {\r\n\t\t\t\tif(fine == false){\r\n\r\n\t\t\t\t\tseconds--;\r\n\t\t\t\t\tint hour = seconds / 3600;\r\n\t\t\t\t\tint minute = (seconds % 3600) / 60;\r\n\t\t\t\t\tint second = seconds % 60;\r\n\t\t\t\t\ttimeLabel.setText(String.format(\"%02d:%02d\", minute, second));\r\n\r\n\t\t\t\t\tif(Integer.compare(seconds,0)==0){\r\n\t\t\t\t\t\tfine = true;\r\n\t\t\t\t\t\ttimer.stop();\r\n\t\t\t\t\t\tCampoGioco.this.dispose();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\ttimer.start();\r\n\r\n\t\tDimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();\r\n\t\tint frameWidth = (int) screenSize.getWidth();\r\n\t\tint frameHeight = (int) screenSize.getHeight();\r\n\r\n\t\tthis.setSize(frameWidth, frameHeight);\r\n\t\tthis.setLayout(null);\r\n\t\tthis.setResizable(false);\r\n\t\tthis.setExtendedState(JFrame.MAXIMIZED_BOTH);\r\n\t\tthis.getContentPane().setBackground(new Color(123, 50, 250));\r\n\t\tthis.add(labelTitolo);\r\n\t\tthis.add(GrigliaGioco);\r\n\t\tthis.add(ContBtn);\r\n\t\tthis.setVisible(true);\r\n\t\tthis.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n\t}\r\n\r\n\tpublic void centerComponent(JComponent c, int y){\r\n\t\tDimension screenSize = Toolkit.getDefaultToolkit ().getScreenSize ();\r\n\t\tDimension frameSize = c.getSize ();\r\n\t\tc.setLocation ((screenSize.width - frameSize.width) / 2, y);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void actionPerformed(ActionEvent e) {\r\n\t\tboolean trovato=false;\r\n\t\tString azione = e.getActionCommand();\r\n\r\n\t\tif(azione.equals(\"Bottoni\") || azione.equals(\"Tastiera\")){\r\n\t\t\tSystem.out.println(buttonTesto);\r\n\t\t\tif (toggleButton.isSelected() && buttonTesto) {\r\n\t\t\t\t// se il pulsante è selezionato, eseguire queste azioni\r\n\t\t\t\ttoggleButton.setText(\"Tastiera\");\r\n\t\t\t\ttesto.setVisible(true);\r\n\t\t\t\tTesto.setVisible(false);\r\n\t\t\t\tAzzeraBottoni();\r\n\t\t\t} else {\r\n\t\t\t\tif(buttonTesto){\r\n\t\t\t\t\t// se il pulsante non è selezionato, eseguire queste azioni\r\n\t\t\t\t\ttoggleButton.setText(\"Bottoni\");\r\n\t\t\t\t\ttesto.setVisible(false);\r\n\t\t\t\t\tTesto.setVisible(true);\r\n\t\t\t\t\tSettaBottoni();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tJButton button = (JButton) e.getSource();\r\n\t\t\tbuttonsclick.add(button);\r\n\r\n\t\t\tfor (int i = 97; i < 123; i++) {\r\n\t\t\t\ti = (char) i;\r\n\t\t\t\tif (azione.equals(Character.toString(i))) {\r\n\t\t\t\t\tif (Testo.getText().equals(\"Inserisci lettere\")) {\r\n\t\t\t\t\t\tTesto.setText(\"\");\r\n\t\t\t\t\t\tTesto.setText(Testo.getText() + azione);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tTesto.setText(Testo.getText() + azione);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor(int n=0;n<4 && trovato==false;n++){\r\n\t\t\t\t\t\tfor(int j=0;j<4 && trovato==false;j++){\r\n\t\t\t\t\t\t\tif(buttons[n][j].equals(button)){\r\n\t\t\t\t\t\t\t\tupdateButtons(n,j);\r\n\t\t\t\t\t\t\t\ttrovato=true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif(azione.equals(\"Annulla Parola\")){\r\n\t\t\t\tbuttonTesto=true;\r\n\t\t\t\tbuttonsclick.clear();\r\n\t\t\t\tif(toggleButton.isSelected()){\r\n\t\t\t\t\ttesto.setText(\"Inserisci lettere\");\r\n\t\t\t\t\tTesto.setText(\"Inserisci lettere\");\r\n\t\t\t\t\tAzzeraBottoni();\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttesto.setText(\"Inserisci lettere\");\r\n\t\t\t\t\tTesto.setText(\"Inserisci lettere\");\r\n\t\t\t\t\tSettaBottoni();\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (azione.equals(\"Cerca Parola\")) {\r\n\t\t\t\tSystem.out.println(Testo.getText());\r\n\t\t\t\tDBConnectionMariaDB conn = new DBConnectionMariaDB();\r\n\t\t\t\tQuery q = new Query();\r\n\t\t\t\tbuttonTesto=true;\r\n\r\n\t\t\t\tString t;\r\n\t\t\t\tif(toggleButton.isSelected()){\r\n\t\t\t\t\tt=testo.getText();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tt=Testo.getText();\r\n\t\t\t\t}\r\n\t\t\t\t//System.out.println(Testo.getText());\r\n\r\n\t\t\t\tif (controllaParola(t) == true) {\r\n\t\t\t\t\tSystem.out.println(\"parola trovata\");\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif(q.ricercaParolaDb(t,conn) == true){\r\n\t\t\t\t\t\t\tSystem.out.println(\"parola trovata\");\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tSystem.out.println(\"parola non trovata\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch (SQLException ex) {\r\n\t\t\t\t\t\tthrow new RuntimeException(ex);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tSystem.out.println(\"parola non trovata\");\r\n\t\t\t\t}\r\n\t\t\t\tif(toggleButton.isSelected()){\r\n\t\t\t\t\ttesto.setText(\"Inserisci lettere\");\r\n\t\t\t\t\tTesto.setText(\"Inserisci lettere\");\r\n\t\t\t\t\tAzzeraBottoni();\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttesto.setText(\"Inserisci lettere\");\r\n\t\t\t\t\tTesto.setText(\"Inserisci lettere\");\r\n\t\t\t\t\t//SettaBottoni();\r\n\t\t\t\t}\r\n\t\t\t\tbuttonsclick.clear();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic void stampaMatrice(){\r\n\t\tfor(int i=0;i<4;i++){\r\n\t\t\tSystem.out.println();\r\n\t\t\tfor(int j=0;j<4;j++){\r\n\t\t\t\tSystem.out.println(tabella[i][j]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic boolean controllaParola(String parola) {\r\n\t\t// Controlla che la parola non sia vuota o null\r\n\t\tif (parola == null || parola.length() == 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Converte la parola in minuscolo per confrontare i caratteri\r\n\t\tparola = parola.toLowerCase();\r\n\r\n\t\t// Cerca la prima lettera della parola nella tabella\r\n\t\tfor (int riga = 0; riga < tabella.length; riga++) {\r\n\t\t\tfor (int colonna = 0; colonna < tabella[0].length; colonna++) {\r\n\t\t\t\tif (tabella[riga][colonna] == parola.charAt(0)) {\r\n\t\t\t\t\t// Se la prima lettera è stata trovata, cerca le lettere successive\r\n\t\t\t\t\tif (cercaParola(parola, riga, colonna, 1)) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Se la parola non è stata trovata, restituisce false\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate boolean cercaParola(String parola, int riga, int colonna, int indice) {\r\n\t\t// Se tutte le lettere della parola sono state trovate, restituisce true\r\n\t\tif (indice == parola.length()) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Cerca la lettera successiva nella tabella\r\n\t\tfor (int riga2 = riga - 1; riga2 <= riga + 1; riga2++) {\r\n\t\t\tfor (int colonna2 = colonna - 1; colonna2 <= colonna + 1; colonna2++) {\r\n\t\t\t\t// Controlla che la posizione sia all'interno della tabella\r\n\t\t\t\tif (riga2 >= 0 && riga2 < tabella.length && colonna2 >= 0 && colonna2 < tabella[0].length && tabella[riga2][colonna2] == parola.charAt(indice)) {\r\n\t\t\t\t\t// Se la lettera successiva è stata trovata, cerca le lettere successive\r\n\t\t\t\t\tif (cercaParola(parola, riga2, colonna2, indice + 1)) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Se la parola non è stata trovata, restituisce false\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate void updateButtons(int row, int col) {\r\n\t\t// Impostazione della cliccabilità di tutti i bottoni a false\r\n\t\tfor (int i = 0; i < 4; i++) {\r\n\t\t\tfor (int j = 0; j < 4; j++) {\r\n\t\t\t\tbuttons[i][j].setEnabled(false);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Impostazione della cliccabilità dei bottoni adiacenti alla cella selezionata a false\r\n\t\tif (row > 0 ) {\r\n\t\t\tif(ifBottoneGiaCliccato(buttons[row - 1][col])==false) {\r\n\t\t\t\tbuttons[row - 1][col].setEnabled(true); // Cellula sopra\r\n\t\t\t}\r\n\r\n\t\t\tif(col>0){\r\n\t\t\t\tif(col < 3){\r\n\t\t\t\t\tif(ifBottoneGiaCliccato(buttons[row -1][col +1 ])==false){\r\n\t\t\t\t\t\tbuttons[row - 1][col + 1].setEnabled(true); // Cellula sopra\r\n\t\t\t\t\t\tif(ifBottoneGiaCliccato(buttons[row - 1][col - 1 ])==false){\r\n\t\t\t\t\t\t\tbuttons[row - 1][col - 1].setEnabled(true); // Cellula sopra\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(ifBottoneGiaCliccato(buttons[row - 1][col - 1 ])==false){\r\n\t\t\t\t\t\tbuttons[row - 1][col - 1].setEnabled(true); // Cellula sopra\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(ifBottoneGiaCliccato(buttons[row +1][col + 1 ])==false){\r\n\t\t\t\t\tbuttons[row - 1][col + 1].setEnabled(true); // Cellula sopra\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tif (row < 3) {\r\n\t\t\tif(ifBottoneGiaCliccato(buttons[row + 1][col])==false){\r\n\t\t\t\tbuttons[row + 1][col].setEnabled(true); // Cellula sotto\r\n\t\t\t}\r\n\r\n\t\t\tif(col>0){\r\n\t\t\t\tif(col < 3){\r\n\t\t\t\t\tif(ifBottoneGiaCliccato(buttons[row +1][col +1 ])==false){\r\n\t\t\t\t\t\tbuttons[row + 1][col + 1].setEnabled(true); // Cellula sopra\r\n\t\t\t\t\t\tif(ifBottoneGiaCliccato(buttons[row +1][col - 1 ])==false){\r\n\t\t\t\t\t\t\tbuttons[row + 1][col - 1].setEnabled(true); // Cellula sopra\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(ifBottoneGiaCliccato(buttons[row +1][col - 1 ])==false){\r\n\t\t\t\t\t\tbuttons[row + 1][col - 1].setEnabled(true); // Cellula sopra\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(ifBottoneGiaCliccato(buttons[row +1][col + 1 ])==false){\r\n\t\t\t\t\tbuttons[row + 1][col + 1].setEnabled(true); // Cellula sopra\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\r\n\t\t}\r\n\t\tif (col > 0) {\r\n\t\t\tif(ifBottoneGiaCliccato(buttons[row][col - 1])==false){\r\n\t\t\t\tbuttons[row][col - 1].setEnabled(true); // Cellula a sinistra\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (col < 3) {\r\n\t\t\tif(ifBottoneGiaCliccato(buttons[row][col + 1])==false){\r\n\t\t\t\tbuttons[row][col + 1].setEnabled(true); // Cellula a destra\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\tpublic boolean ifBottoneGiaCliccato(JButton b) {\r\n\t\tboolean trovato = false;\r\n\t\tIterator<JButton> j = buttonsclick.iterator();\r\n\r\n\t\twhile (j.hasNext() && trovato == false) {\r\n\t\t\tif (b.equals(j.next())) {\r\n\t\t\t\ttrovato = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn trovato;\r\n\t}\r\n\r\n\tpublic void AzzeraBottoni(){\r\n\t\tfor (int i = 0; i < 4; i++) {\r\n\t\t\tfor (int j = 0; j < 4; j++) {\r\n\t\t\t\tbuttons[i][j].setEnabled(false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic void SettaBottoni(){\r\n\t\tfor (int i = 0; i < 4; i++) {\r\n\t\t\tfor (int j = 0; j < 4; j++) {\r\n\t\t\t\tbuttons[i][j].setEnabled(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/view/CampoGioco.java b/src/view/CampoGioco.java
--- a/src/view/CampoGioco.java	
+++ b/src/view/CampoGioco.java	
@@ -42,7 +42,7 @@
 	//label e classe timer
 	private Timer timer;
 	private JLabel timeLabel;
-	int minutes=10;
+	//int minutes=10;
 	int seconds = 480;
 	boolean fine = false;
 
@@ -51,7 +51,6 @@
 	public CampoGioco(){
 
 		this.setTitle("Campo da Gioco");
-
 		JLabel labelTitolo = new JLabel();
 		labelTitolo.setText("Campo Da Gioco Paroliere");
 		labelTitolo.setForeground(new Color(0, 0, 0));
Index: src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import view.HomePage;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        try {\r\n            HomePage window1 = new HomePage();\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Main.java b/src/Main.java
--- a/src/Main.java	
+++ b/src/Main.java	
@@ -4,7 +4,6 @@
     public static void main(String[] args) {
         try {
             HomePage window1 = new HomePage();
-
         } catch (Exception e) {
             e.printStackTrace();
         }
Index: src/view/CampoGiocoDifficile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/view/CampoGiocoDifficile.java b/src/view/CampoGiocoDifficile.java
new file mode 100644
--- /dev/null	
+++ b/src/view/CampoGiocoDifficile.java	
@@ -0,0 +1,5 @@
+package view;
+
+public class CampoGiocoDifficile{
+
+}
