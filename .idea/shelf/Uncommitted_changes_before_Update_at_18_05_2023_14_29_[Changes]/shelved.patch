Index: src/view/CampoGioco.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package view;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.Dimension;\r\nimport java.awt.Toolkit;\r\nimport java.awt.event.*;\r\nimport java.sql.SQLException;\r\nimport java.util.Iterator;\r\nimport java.util.Random;\r\nimport java.util.Vector;\r\n\r\nimport javax.swing.JButton;\r\nimport javax.swing.JFrame;\r\nimport javax.swing.JLabel;\r\nimport javax.swing.border.Border;\r\n\r\nimport model.DBConnectionMariaDB;\r\nimport model.Query;\r\n\r\nimport javax.swing.JToggleButton;\r\nimport javax.swing.table.DefaultTableCellRenderer;\r\nimport javax.swing.table.DefaultTableModel;\r\nimport javax.swing.table.TableCellRenderer;\r\nimport javax.swing.table.TableColumn;\r\n\r\nimport controller.dailettera;\r\n\r\nimport view.RoundedButton;\r\n\r\npublic class CampoGioco extends JFrame implements ActionListener{\r\n\r\n\tprivate int difficolta = 6;\r\n\r\n\tint numParTrovate = 0;\r\n\tint totPunteggio = 0;\r\n\tint punteggio;\r\n\tString nome_utenti;\r\n\r\n\tboolean parolaEsistente = false;\r\n\tVector<String> paroleTrovate = new Vector(0,1);\r\n\r\n\tDefaultTableModel model;\r\n\tJPanel panelTabellaRis;\r\n\r\n\tJTable table;\r\n\tVector<JButton> buttonsclick = new Vector(0,1);\r\n\r\n\tJButton[][] buttons = new JButton[difficolta][difficolta];\r\n\r\n\tJToggleButton toggleButton = new JToggleButton(\"Bottoni\");\r\n\r\n\tprivate char[][] tabella = new char[difficolta][difficolta];\r\n\tprivate JLabel Testo, timeLabel, ContBtnTabella;\r\n\tprivate JTextField testo;\r\n\tprivate RoundedButton Invio, Annulla, Termina, NuovaPartita;\r\n\tprivate JPanel GrigliaGioco, ContBtn;\r\n\tprivate Timer timer;\r\n\tRoundedButton Tabella;\r\n\r\n\tint minutes = 10;\r\n\tint seconds = 480;\r\n\tboolean fine = false;\r\n\r\n\tboolean buttonTesto = true;\r\n\r\n\tpublic CampoGioco(int dim,String nome){\r\n\r\n\t\tnome_utenti=nome;\r\n\r\n\t\tthis.setTitle(\"Campo da Gioco\");\r\n\t\tthis.setSize(1500, 800);\r\n\r\n\t\tdifficolta = dim;\r\n\r\n\t\tBorder border = BorderFactory.createLineBorder(Color.black, 3); //Bordo del jtextfield\r\n\t\tBorder border2 = BorderFactory.createLineBorder(Color.WHITE\t, 3); //Bordo dei btn della griglia\r\n\r\n\t\t//======================================================================================================\r\n\t\t// TITOLO CAMPO DA GIOCO\r\n\t\t//======================================================================================================\r\n\r\n\t\tJLabel labelTitolo = new JLabel();\r\n\t\tlabelTitolo.setText(\"Campo Da Gioco Paroliere\");\r\n\t\tlabelTitolo.setForeground(new Color(0, 0, 0));\r\n\t\tlabelTitolo.setFont(new Font(\"MV Boli\", Font.PLAIN, 40));\r\n\r\n\t\tlabelTitolo.setBackground(new Color(123, 50, 250));\r\n\t\tlabelTitolo.setOpaque(true);\r\n\t\tlabelTitolo.setSize(500, 70);\r\n\t\tthis.centerComponent(this, labelTitolo, 20);\r\n\r\n\t\t//======================================================================================================\r\n\t\t// BOTTONE ATTIVA DISATTIVA JBUTTON\r\n\t\t//======================================================================================================\r\n\r\n\t\tCentraOggetti c = new CentraOggetti();\r\n\t\ttoggleButton.addActionListener(this);\r\n\t\ttoggleButton.setBackground(Color.WHITE);\r\n\t\ttoggleButton.setForeground(Color.GRAY);\r\n\t\ttoggleButton.setPreferredSize(new Dimension(80, 40));\r\n\t\ttoggleButton.setMargin(new Insets(0, 10, 0, 10));\r\n\t\ttoggleButton.setVisible(true);\r\n\r\n\t\tif(difficolta == 4){\r\n\t\t\ttoggleButton.setBounds(400,300,100,30);\r\n\t\t}else if(difficolta == 5){\r\n\t\t\ttoggleButton.setBounds(380,310,100,30);\r\n\t\t} else if (difficolta == 6) {\r\n\t\t\ttoggleButton.setBounds(360,340,100,30);\r\n\t\t}\r\n\r\n\t\t//======================================================================================================\r\n\t\t// CREAZIONE GRIGLIA DA GIOCO BOTTONI\r\n\t\t//======================================================================================================\r\n\r\n\t\tGrigliaGioco = new JPanel();\r\n\t\tContBtn = new JPanel();\r\n\t\tGrigliaGioco.setLayout(new GridLayout(difficolta, difficolta, 0, 0));\r\n\r\n\t\tint a = 0;\r\n\r\n\t\tfor(int i = 1;i < difficolta+1; i++){\r\n\t\t\ta++;\r\n\t\t\tfor(int j = 1;j < difficolta+1; j++){\r\n\t\t\t\tRandom rand = new Random();\r\n\t\t\t\tint num;\r\n\t\t\t\tnum = rand.nextInt(100000);\r\n\t\t\t\tTabella = new RoundedButton(\"\"+(char)dailettera.controllo(num));\r\n\t\t\t\tTabella.setBorder(null);\r\n\t\t\t\tContBtnTabella = new JLabel();\r\n\r\n\t\t\t\ttabella[i-1][j-1] = (char)dailettera.controllo(num);\r\n\t\t\t\tbuttons[i-1][j-1] = Tabella;\r\n\t\t\t\tTabella.setName(\"Btn\"+a);\r\n\t\t\t\tTabella.addActionListener(this);\r\n\r\n\t\t\t\tContBtnTabella.setSize(75,75);\r\n\t\t\t\tContBtnTabella.setLayout(null);\r\n\t\t\t\tContBtnTabella.setBorder(border2);\r\n\r\n\t\t\t\tint labelWidth = ContBtnTabella.getWidth();\r\n\t\t\t\tint labelHeight = ContBtnTabella.getHeight();\r\n\r\n\t\t\t\tint x = (labelWidth - 55) / 2;\r\n\t\t\t\tint y = (labelHeight - 55) / 2;\r\n\r\n\t\t\t\tContBtnTabella.add(Tabella);\r\n\r\n\t\t\t\tTabella.setBounds(x, y, 55, 55);\r\n\t\t\t\tTabella.setBackground(Color.BLACK);\r\n\t\t\t\tTabella.setFont(new Font(\"MV Boli\", Font.BOLD, 20));\r\n\t\t\t\tTabella.setForeground(Color.WHITE);\r\n\r\n\t\t\t\tGrigliaGioco.add(ContBtnTabella);\r\n\r\n\t\t\t\ta++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstampaMatrice();\r\n\r\n\t\tContBtnTabella.setVisible(true);\r\n\t\tContBtnTabella.setBackground(new Color(123, 50, 250));\r\n\r\n\t\tGrigliaGioco.setVisible(true);\r\n\r\n\t\tif(difficolta == 4){\r\n\t\t\tGrigliaGioco.setSize(302, 302);\r\n\t\t\tthis.centerComponent(this, GrigliaGioco, 160);\r\n\t\t}else if(difficolta == 5){\r\n\t\t\tGrigliaGioco.setSize(376, 376);\r\n\t\t\tthis.centerComponent(this, GrigliaGioco, 140);\r\n\t\t} else if (difficolta == 6) {\r\n\t\t\tGrigliaGioco.setSize(450, 450);\r\n\t\t\tthis.centerComponent(this, GrigliaGioco, 130);\r\n\t\t}\r\n\r\n\t\tGrigliaGioco.setBackground(new Color(123, 50, 250));\r\n\t\tGrigliaGioco.setBorder(border2);\r\n\r\n\t\t//======================================================================================================\r\n\t\t// CREAZIONE TABELLA RISULTATI\r\n\t\t//======================================================================================================\r\n\r\n\t\t//Creazione dell'oggetto TableCellRenderer personalizzato\r\n\t\tFont font = new Font(\"Arial\", Font.BOLD, 13);\r\n\t\tColor foregroundColor = Color.black;\r\n\t\tTableCellRenderer renderer = new CustomTableCellRenderer(font, foregroundColor);\r\n\r\n\t\t//Creazione campi del modello dati della tabella\r\n\t\tmodel = new DefaultTableModel();\r\n\t\tmodel.addColumn(\"Parola\");\r\n\t\tmodel.addColumn(\"Punteggio\");\r\n\r\n\t\t// Creazione della tabella\r\n\t\ttable = new JTable(model);\r\n\t\ttable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);\r\n\t\ttable.setRowHeight(40);\r\n\t\ttable.getTableHeader().setReorderingAllowed(false);\r\n\t\t//table.setSize(200,200);\r\n\t\tDefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();\r\n\t\tcenterRenderer.setHorizontalAlignment(SwingConstants.CENTER);\r\n\t\ttable.setDefaultRenderer(Object.class, centerRenderer);\r\n\t\ttable.getTableHeader().setReorderingAllowed(false);\r\n\r\n\t\t//Panel in cui inserire tabella\r\n\t\tpanelTabellaRis = new JPanel(new BorderLayout());\r\n\t\t//panelTabellaRis.add(Box.createVerticalStrut(30)); // Spazio vuoto tra etichetta e tabella\r\n\t\t//panelTabellaRis.add(titleLabelTblRis);\r\n\t\tpanelTabellaRis.setVisible(true);\r\n\r\n\t\tpanelTabellaRis.setBounds(1150,160,301,450);\r\n\r\n\t\tif(difficolta == 4){\r\n\t\t\tpanelTabellaRis.setBounds(1150,160,301,450);\r\n\t\t}else if(difficolta == 5){\r\n\t\t\tpanelTabellaRis.setBounds(1150,140,301,450);\r\n\t\t} else if (difficolta == 6) {\r\n\t\t\tpanelTabellaRis.setBounds(1150,130,301,450);\r\n\t\t}\r\n\r\n\t\tJScrollPane scrollPane = new JScrollPane(table);\r\n\t\tpanelTabellaRis.add(scrollPane, BorderLayout.CENTER);\r\n\t\tpanelTabellaRis.setVisible(true);\r\n\t\ttable.getTableHeader().setReorderingAllowed(false);\r\n\t\ttable.setVisible(true);\r\n\t\tTableColumn column;\r\n\r\n\t\tcolumn = table.getColumnModel().getColumn(0);\r\n\t\tcolumn.setPreferredWidth(150); // Imposta la larghezza desiderata per la colonna\r\n\t\tcolumn.setResizable(false);\r\n\t\tcolumn = table.getColumnModel().getColumn(1);\r\n\t\tcolumn.setPreferredWidth(149); // Imposta la larghezza desiderata per la colonna\r\n\t\tcolumn.setResizable(false);\r\n\r\n\t\t//======================================================================================================\r\n\t\t// JLABEL PER INSERIMENTO PAROLA DA CERCARE\r\n\t\t//======================================================================================================\r\n\r\n\t\tTesto = new JLabel(\"Inserisci lettere\");\r\n\t\ttesto= new JTextField(\"Inserisci lettere\");\r\n\t\ttesto.addFocusListener(new FocusListener() {\r\n\t\t\tpublic void focusGained(FocusEvent e) {\r\n\t\t\t\tif (testo.getText().equals(\"Inserisci lettere\")) {\r\n\t\t\t\t\ttesto.setText(\"\");\r\n\t\t\t\t\tbuttonTesto = false;\r\n\t\t\t\t\ttesto.setForeground(Color.BLACK);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tpublic void focusLost(FocusEvent e) {\r\n\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.add(Testo);\r\n\t\tthis.add(testo);\r\n\t\ttesto.setVisible(false);\r\n\r\n\t\tFont fontA = new Font (\"MV Boli\", Font. BOLD, 20);\r\n\r\n\t\tTesto.setBorder(border);\r\n\t\ttesto.setBorder(border);\r\n\t\tTesto.setSize(280,35);\r\n\t\ttesto.setSize(280,35);\r\n\t\tTesto.setFont(fontA);\r\n\t\ttesto.setFont(fontA);\r\n\t\tTesto.setForeground(Color.BLACK);\r\n\t\ttesto.setForeground(Color.BLACK);\r\n\t\ttesto.setOpaque(false);\r\n\r\n\t\tif(difficolta == 6){\r\n\t\t\tthis.centerComponent(this, Testo, 620);\r\n\t\t\tthis.centerComponent(this, testo, 620);\r\n\t\t}else{\r\n\t\t\tthis.centerComponent(this, Testo, 550);\r\n\t\t\tthis.centerComponent(this, testo, 550);\r\n\t\t}\r\n\r\n\t\t//======================================================================================================\r\n\t\t// BOTTONI PER CERCARE O ANNULARE LA PAROLA INSERITA E TERMINA PARTITA\r\n\t\t//======================================================================================================\r\n\r\n\t\tInvio = new RoundedButton(\"Cerca Parola\");\r\n\t\tInvio.setBounds(0,0,200,50);\r\n\t\tInvio.addActionListener(this);\r\n\t\tInvio.setFont(new Font(\"MV Boli\", Font.BOLD, 20));\r\n\t\tInvio.setBackground(Color.BLACK);\r\n\t\tInvio.setForeground(Color.white);\r\n\t\tInvio.setBorder(null);\r\n\r\n\t\tAnnulla = new RoundedButton(\"Annulla Parola\");\r\n\t\tAnnulla.setBounds(250,0,200,50);\r\n\t\tAnnulla.addActionListener(this);\r\n\t\tAnnulla.setFont(new Font(\"MV Boli\", Font.BOLD, 20));\r\n\t\tAnnulla.setBackground(Color.BLACK);\r\n\t\tAnnulla.setForeground(Color.white);\r\n\t\tAnnulla.setBorder(null);\r\n\r\n\t\tContBtn.add(Invio);\r\n\t\tContBtn.add(Annulla);\r\n\t\tContBtn.setVisible(true);\r\n\t\tContBtn.setSize(450,50);\r\n\t\tContBtn.setBackground(new Color(123, 50, 250));\r\n\t\tContBtn.setLayout(null);\r\n\t\tthis.centerComponent(this, ContBtn, 700);\r\n\r\n\t\tTermina = new RoundedButton(\"Termina Partita\");\r\n\t\tTermina.setBounds(1270, 35, 170, 50);\r\n\t\tTermina.addActionListener(this);\r\n\t\tTermina.setFont(new Font(\"MV Boli\", Font.BOLD, 17));\r\n\t\tTermina.setBackground(Color.BLACK);\r\n\t\tTermina.setForeground(Color.white);\r\n\t\tTermina.setBorder(null);\r\n\r\n\t\tNuovaPartita = new RoundedButton(\"Nuova Partita\");\r\n\t\tNuovaPartita.setBounds(30, 700, 170, 50);\r\n\t\tNuovaPartita.addActionListener(this);\r\n\t\tNuovaPartita.setFont(new Font(\"MV Boli\", Font.BOLD, 17));\r\n\t\tNuovaPartita.setBackground(Color.BLACK);\r\n\t\tNuovaPartita.setForeground(Color.white);\r\n\t\tNuovaPartita.setBorder(null);\r\n\r\n\t\t//======================================================================================================\r\n\t\t// TIMER DELLA PARTITA\r\n\t\t//======================================================================================================\r\n\r\n\t\ttimeLabel = new JLabel(\"00:00\");\r\n\t\ttimeLabel.setFont(new Font(\"MV Boli\", Font.BOLD, 35));\r\n\t\ttimeLabel.setBounds(30, 30, 200,40);\r\n\r\n\t\ttimer = new Timer(1000, new ActionListener() {\r\n\t\t\tpublic void actionPerformed(ActionEvent e) {\r\n\t\t\t\tif(fine == false){\r\n\r\n\t\t\t\t\tseconds--;\r\n\t\t\t\t\tint hour = seconds / 3600;\r\n\t\t\t\t\tint minute = (seconds % 3600) / 60;\r\n\t\t\t\t\tint second = seconds % 60;\r\n\t\t\t\t\ttimeLabel.setText(String.format(\"%02d:%02d\", minute, second));\r\n\r\n\t\t\t\t\tif(Integer.compare(seconds,0)==0){\r\n\t\t\t\t\t\tDBConnectionMariaDB connTermine1 = new DBConnectionMariaDB();\r\n\t\t\t\t\t\tQuery q2 = new Query();\r\n\t\t\t\t\t\tString dif1=\"Facile\";\r\n\t\t\t\t\t\tif(Integer.compare(difficolta,6)==0){\r\n\t\t\t\t\t\t\tdif1=\"Facile\";\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(Integer.compare(difficolta,5)==0){\r\n\t\t\t\t\t\t\tdif1=\"Medio\";\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(Integer.compare(difficolta,4)==0){\r\n\t\t\t\t\t\t\tdif1=\"Difficile\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tq2.getInsertPartita(totPunteggio,\"08:00:00\",dif1,nome_utenti,numParTrovate,connTermine1);\r\n\t\t\t\t\t\tfine = true;\r\n\t\t\t\t\t\ttimer.stop();\r\n\t\t\t\t\t\tCampoGioco.this.dispose();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\ttimer.start();\r\n\r\n\t\t//======================================================================================================\r\n\t\t// IMPOSTAZIONI FRAME\r\n\t\t//======================================================================================================\r\n\r\n\t\tthis.add(labelTitolo);\r\n\t\tthis.add(GrigliaGioco);\r\n\t\tthis.add(ContBtn);\r\n\t\tthis.add(Termina);\r\n\t\tthis.add(timeLabel);\r\n\t\tthis.add(toggleButton);\r\n\t\tthis.add(panelTabellaRis);\r\n\t\tthis.add(NuovaPartita);\r\n\r\n\t\tImageIcon icon = new ImageIcon(\"file/ParoliereIcon.png\");\r\n\t\tthis.setIconImage(icon.getImage());\r\n\r\n\t\tthis.setLayout(null);\r\n\t\tthis.setResizable(false);\r\n\t\tthis.getContentPane().setBackground(new Color(123, 50, 250));\r\n\t\t//this.getContentPane().setBackground(Color.darkGray);\r\n\t\tthis.setVisible(true);\r\n\t\tthis.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n\t\tcenterFrame(this);\r\n\t}\r\n\r\n\t//======================================================================================================\r\n\t// METODO CENTRA COMPONENTI - FRAME\r\n\t//======================================================================================================\r\n\r\n\tpublic void centerComponent(Frame f, JComponent c, int y){\r\n\t\tDimension frameSize = f.getSize();\r\n\t\tDimension componentSize = c.getSize();\r\n\t\tc.setLocation ((frameSize.width - componentSize.width) / 2, y);\r\n\t}\r\n\r\n\tpublic static void centerFrame(Frame f)\r\n\t{\r\n\t\tDimension screenSize = Toolkit.getDefaultToolkit ().getScreenSize ();\r\n\t\tDimension frameSize = f.getSize ();\r\n\t\tf.setLocation ((screenSize.width - frameSize.width) / 2,\r\n\t\t\t\t(screenSize.height - frameSize.height) / 2 - 20);\r\n\t}\r\n\r\n\t//======================================================================================================\r\n\t// METODO PER GLI ACTIONLISTENER DEI BOTTONI\r\n\t//======================================================================================================\r\n\r\n\t@Override\r\n\tpublic void actionPerformed(ActionEvent e) {\r\n\t\tboolean trovato=false;\r\n\t\tString azione = e.getActionCommand();\r\n\r\n\t\tif((testo.getText().equals(\"\") || testo.getText().equals(\"Inserisci lettere\")&& (Testo.getText().equals(\"Inserisci lettere\")||Testo.getText().equals(\"\")))){\r\n\t\t\tbuttonTesto=true;\r\n\t\t}else{\r\n\t\t\tbuttonTesto=false;\r\n\t\t}\r\n\r\n\t\tif(azione.equals(\"Bottoni\") || azione.equals(\"Tastiera\")){\r\n\t\t\tSystem.out.println(buttonTesto);\r\n\t\t\tif (toggleButton.isSelected() && buttonTesto) {\r\n\t\t\t\t// se il pulsante è selezionato, eseguire queste azioni\r\n\t\t\t\ttoggleButton.setText(\"Tastiera\");\r\n\t\t\t\ttesto.setVisible(true);\r\n\t\t\t\tTesto.setVisible(false);\r\n\t\t\t\tAzzeraBottoni();\r\n\t\t\t} else {\r\n\t\t\t\tif(buttonTesto){\r\n\t\t\t\t\t// se il pulsante non è selezionato, eseguire queste azioni\r\n\t\t\t\t\ttoggleButton.setText(\"Bottoni\");\r\n\t\t\t\t\ttesto.setVisible(false);\r\n\t\t\t\t\tTesto.setVisible(true);\r\n\t\t\t\t\tSettaBottoni();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tJButton button = (JButton) e.getSource();\r\n\t\t\tbuttonsclick.add(button);\r\n\r\n\t\t\tfor (int i = 97; i < 123; i++) {\r\n\t\t\t\ti = (char) i;\r\n\t\t\t\tif (azione.equals(Character.toString(i))) {\r\n\t\t\t\t\tif (Testo.getText().equals(\"Inserisci lettere\")) {\r\n\t\t\t\t\t\tTesto.setText(\"\");\r\n\t\t\t\t\t\tTesto.setText(Testo.getText() + azione);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tTesto.setText(Testo.getText() + azione);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor(int n=0;n<difficolta && trovato==false;n++){\r\n\t\t\t\t\t\tfor(int j=0;j<difficolta && trovato==false;j++){\r\n\t\t\t\t\t\t\tif(buttons[n][j].equals(button)){\r\n\t\t\t\t\t\t\t\tupdateButtons(n,j);\r\n\t\t\t\t\t\t\t\ttrovato=true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif(azione.equals(\"Annulla Parola\")){\r\n\t\t\t\t//System.out.println(difficolta);\r\n\t\t\t\tbuttonTesto=true;\r\n\t\t\t\tbuttonsclick.clear();\r\n\t\t\t\tif(toggleButton.isSelected()){\r\n\t\t\t\t\ttesto.setText(\"Inserisci lettere\");\r\n\t\t\t\t\tTesto.setText(\"Inserisci lettere\");\r\n\t\t\t\t\tAzzeraBottoni();\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttesto.setText(\"Inserisci lettere\");\r\n\t\t\t\t\tTesto.setText(\"Inserisci lettere\");\r\n\t\t\t\t\tSettaBottoni();\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (azione.equals(\"Cerca Parola\")) {\r\n\t\t\t\tSystem.out.println(Testo.getText());\r\n\t\t\t\tDBConnectionMariaDB conn = new DBConnectionMariaDB();\r\n\t\t\t\tQuery q = new Query();\r\n\t\t\t\tbuttonTesto=true;\r\n\r\n\t\t\t\tString t;\r\n\t\t\t\tif(toggleButton.isSelected()){\r\n\t\t\t\t\tt=testo.getText();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tt=Testo.getText();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//System.out.println(Testo.getText());\r\n\r\n\t\t\t\tIterator<String> c = paroleTrovate.iterator();\r\n\t\t\t\twhile(c.hasNext() && parolaEsistente == false){\r\n\t\t\t\t\tif(t.equals(c.next())){\r\n\t\t\t\t\t\tparolaEsistente=true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (controllaParola(t) == true && parolaEsistente == false) {\r\n\t\t\t\t\t//System.out.println(\"parola trovata\");\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif(q.ricercaParolaDb(t,conn) == true){\r\n\t\t\t\t\t\t\t//System.out.println(\"parola trovata\");\r\n\r\n\t\t\t\t\t\t\tparoleTrovate.add(t);\r\n\t\t\t\t\t\t\tpunteggio = t.length();\r\n\t\t\t\t\t\t\tmodel.addRow(new Object[]{t, punteggio});\r\n\t\t\t\t\t\t\ttable.setModel(model);\r\n\t\t\t\t\t\t\ttotPunteggio=totPunteggio+punteggio;\r\n\t\t\t\t\t\t\tnumParTrovate++;\r\n\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tSystem.out.println(\"parola non trovata\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch (SQLException ex) {\r\n\t\t\t\t\t\tthrow new RuntimeException(ex);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tSystem.out.println(\"parola non trovata\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparolaEsistente=false;\r\n\r\n\t\t\t\tif(toggleButton.isSelected()){\r\n\t\t\t\t\ttesto.setText(\"Inserisci lettere\");\r\n\t\t\t\t\tTesto.setText(\"Inserisci lettere\");\r\n\t\t\t\t\tAzzeraBottoni();\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttesto.setText(\"Inserisci lettere\");\r\n\t\t\t\t\tTesto.setText(\"Inserisci lettere\");\r\n\t\t\t\t\tSettaBottoni();\r\n\t\t\t\t}\r\n\t\t\t\tbuttonsclick.clear();\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(azione.equals(\"Termina Partita\")){\r\n\t\t\tDBConnectionMariaDB connTermine = new DBConnectionMariaDB();\r\n\t\t\tQuery q1 = new Query();\r\n\r\n\r\n\t\t\tint totSec=480-seconds;\r\n\r\n\t\t\tint totOra=totSec / 3600;\r\n\t\t\tint totMinuti=(totSec % 3600) / 60;\r\n\t\t\tint totSecondi=totSec % 60;\r\n\r\n\t\t\tString dif=\"Facile\";\r\n\t\t\tif(Integer.compare(difficolta,6)==0){\r\n\t\t\t\tdif=\"Facile\";\r\n\t\t\t}\r\n\r\n\t\t\tif(Integer.compare(difficolta,5)==0){\r\n\t\t\t\tdif=\"Medio\";\r\n\t\t\t}\r\n\r\n\t\t\tif(Integer.compare(difficolta,4)==0){\r\n\t\t\t\tdif=\"Difficile\";\r\n\t\t\t}\r\n\r\n\r\n\t\t\tString tempo=Integer.toString(totOra)+\":\"+Integer.toString(totMinuti)+\":\"+Integer.toString(totSecondi);\r\n\r\n\t\t\tSystem.out.println(tempo);\r\n\t\t\tSystem.out.println(totPunteggio);\r\n\t\t\tSystem.out.println(numParTrovate);\r\n\r\n\t\t\tq1.getInsertPartita(totPunteggio,tempo,dif,nome_utenti,numParTrovate,connTermine);\r\n\r\n\t\t\tHomePage newPage = new HomePage();\r\n\t\t\tthis.dispose();\r\n\t\t}\r\n\r\n\t\tif(azione.equals(\"Nuova Partita\")){\r\n\t\t\tCampoGioco newPage = new CampoGioco(difficolta,nome_utenti);\r\n\t\t\tthis.dispose();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic void stampaMatrice(){\r\n\t\tfor(int i=0;i<difficolta;i++){\r\n\t\t\tSystem.out.println();\r\n\t\t\tfor(int j=0;j<difficolta;j++){\r\n\t\t\t\tSystem.out.println(tabella[i][j]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic boolean controllaParola(String parola) {\r\n\t\t// Controlla che la parola non sia vuota o null\r\n\t\tif (parola == null || parola.length() == 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Converte la parola in minuscolo per confrontare i caratteri\r\n\t\tparola = parola.toLowerCase();\r\n\r\n\t\t// Cerca la prima lettera della parola nella tabella\r\n\t\tfor (int riga = 0; riga < tabella.length; riga++) {\r\n\t\t\tfor (int colonna = 0; colonna < tabella[0].length; colonna++) {\r\n\t\t\t\tif (tabella[riga][colonna] == parola.charAt(0)) {\r\n\t\t\t\t\t// Se la prima lettera è stata trovata, cerca le lettere successive\r\n\t\t\t\t\tif (cercaParola(parola, riga, colonna, 1)) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Se la parola non è stata trovata, restituisce false\r\n\t\treturn false;\r\n\t}\r\n\r\n\t//======================================================================================================\r\n\t// METODO PER CERCARE LA PAROLA\r\n\t//======================================================================================================\r\n\r\n\tprivate boolean cercaParola(String parola, int riga, int colonna, int indice) {\r\n\t\t// Se tutte le lettere della parola sono state trovate, restituisce true\r\n\t\tif (indice == parola.length()) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Cerca la lettera successiva nella tabella\r\n\t\tfor (int riga2 = riga - 1; riga2 <= riga + 1; riga2++) {\r\n\t\t\tfor (int colonna2 = colonna - 1; colonna2 <= colonna + 1; colonna2++) {\r\n\t\t\t\t// Controlla che la posizione sia all'interno della tabella\r\n\t\t\t\tif (riga2 >= 0 && riga2 < tabella.length && colonna2 >= 0 && colonna2 < tabella[0].length && tabella[riga2][colonna2] == parola.charAt(indice)) {\r\n\t\t\t\t\t// Se la lettera successiva è stata trovata, cerca le lettere successive\r\n\t\t\t\t\tif (cercaParola(parola, riga2, colonna2, indice + 1)) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Se la parola non è stata trovata, restituisce false\r\n\t\treturn false;\r\n\t}\r\n\r\n\t//======================================================================================================\r\n\t// METODO PER VERIFICARE LA CLICCABILITA DEI BOTTONI\r\n\t//======================================================================================================\r\n\r\n\tprivate void updateButtons(int row, int col) {\r\n\t\t// Impostazione della cliccabilità di tutti i bottoni a false\r\n\t\tfor (int i = 0; i < difficolta; i++) {\r\n\t\t\tfor (int j = 0; j < difficolta; j++) {\r\n\t\t\t\tbuttons[i][j].setEnabled(false);\r\n\t\t\t\tbuttons[i][j].setBorder(null);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Impostazione della cliccabilità dei bottoni adiacenti alla cella selezionata a false\r\n\t\tif (row > 0 ) {\r\n\t\t\tif(ifBottoneGiaCliccato(buttons[row - 1][col])==false) {\r\n\t\t\t\tbuttons[row - 1][col].setEnabled(true); // Cellula sopra\r\n\t\t\t}\r\n\r\n\t\t\tif(col>0){\r\n\t\t\t\tif(col < difficolta-1){\r\n\t\t\t\t\tif(ifBottoneGiaCliccato(buttons[row -1][col +1 ])==false){\r\n\t\t\t\t\t\tbuttons[row - 1][col + 1].setEnabled(true); // Cellula sopra\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(ifBottoneGiaCliccato(buttons[row - 1][col - 1 ])==false){\r\n\t\t\t\t\t\tbuttons[row - 1][col - 1].setEnabled(true); // Cellula sopra\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(ifBottoneGiaCliccato(buttons[row - 1][col - 1 ])==false){\r\n\t\t\t\t\t\tbuttons[row - 1][col - 1].setEnabled(true); // Cellula sopra\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(row<difficolta){\r\n\r\n\t\t\t\t\tif(ifBottoneGiaCliccato(buttons[row ][col + 1 ])==false){\r\n\t\t\t\t\t\tbuttons[row][col + 1].setEnabled(true); // Cellula sopra\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(ifBottoneGiaCliccato(buttons[row ][col + 1 ])==false){\r\n\t\t\t\t\t\tbuttons[row-1][col + 1].setEnabled(true); // Cellula sopra\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tif (row < difficolta-1) {\r\n\t\t\tif(ifBottoneGiaCliccato(buttons[row + 1][col])==false){\r\n\t\t\t\tbuttons[row + 1][col].setEnabled(true); // Cellula sotto\r\n\t\t\t}\r\n\r\n\t\t\tif(col>0){\r\n\t\t\t\tif(col < difficolta-1){\r\n\t\t\t\t\tif(ifBottoneGiaCliccato(buttons[row +1][col +1 ])==false){\r\n\t\t\t\t\t\tbuttons[row + 1][col + 1].setEnabled(true); // Cellula sopra\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(ifBottoneGiaCliccato(buttons[row +1][col - 1 ])==false){\r\n\t\t\t\t\t\tbuttons[row + 1][col - 1].setEnabled(true); // Cellula sopra\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(ifBottoneGiaCliccato(buttons[row +1][col - 1 ])==false){\r\n\t\t\t\t\t\tbuttons[row + 1][col - 1].setEnabled(true); // Cellula sopra\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(ifBottoneGiaCliccato(buttons[row +1][col + 1 ])==false){\r\n\t\t\t\t\tbuttons[row + 1][col + 1].setEnabled(true); // Cellula sopra\r\n\t\t\t\t}\r\n\t\t\t\tif(ifBottoneGiaCliccato(buttons[row +1][col + 1 ])==false){\r\n\t\t\t\t\tbuttons[row - 1][col + 1].setEnabled(true); // Cellula sopra\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (col > 0) {\r\n\t\t\tif(ifBottoneGiaCliccato(buttons[row][col - 1])==false){\r\n\t\t\t\tbuttons[row][col - 1].setEnabled(true); // Cellula a sinistra\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (col < difficolta-1) {\r\n\t\t\tif(ifBottoneGiaCliccato(buttons[row][col + 1])==false){\r\n\t\t\t\tbuttons[row][col + 1].setEnabled(true); // Cellula a destra\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic boolean ifBottoneGiaCliccato(JButton b) {\r\n\t\tboolean trovato = false;\r\n\t\tIterator<JButton> j = buttonsclick.iterator();\r\n\r\n\t\twhile (j.hasNext() && trovato == false) {\r\n\t\t\tif (b.equals(j.next())) {\r\n\t\t\t\ttrovato = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn trovato;\r\n\t}\r\n\r\n\tpublic void AzzeraBottoni(){\r\n\t\tfor (int i = 0; i < difficolta; i++) {\r\n\t\t\tfor (int j = 0; j < difficolta; j++) {\r\n\t\t\t\tbuttons[i][j].setEnabled(false);\r\n\t\t\t\tbuttons[i][j].setBorder(null);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic void SettaBottoni(){\r\n\t\tfor (int i = 0; i < difficolta; i++) {\r\n\t\t\tfor (int j = 0; j < difficolta; j++) {\r\n\t\t\t\tbuttons[i][j].setEnabled(true);\r\n\t\t\t\tbuttons[i][j].setBorder(null);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tpublic int getDifficolta() {\r\n\t\treturn difficolta;\r\n\t}\r\n\r\n\tpublic void setDifficolta(int difficolta) {\r\n\t\tthis.difficolta = difficolta;\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/view/CampoGioco.java b/src/view/CampoGioco.java
--- a/src/view/CampoGioco.java	(revision 42d6402723fcf8766c7f8c2c8f151d634f798d88)
+++ b/src/view/CampoGioco.java	(date 1684412785737)
@@ -10,6 +10,8 @@
 import java.util.Random;
 import java.util.Vector;
 
+import java.awt.geom.RoundRectangle2D;
+
 import javax.swing.JButton;
 import javax.swing.JFrame;
 import javax.swing.JLabel;
@@ -51,7 +53,7 @@
 	JToggleButton toggleButton = new JToggleButton("Bottoni");
 
 	private char[][] tabella = new char[difficolta][difficolta];
-	private JLabel Testo, timeLabel, ContBtnTabella;
+	private JLabel Testo, timeLabel, ContBtnTabella, Utente,Punteggio;
 	private JTextField testo;
 	private RoundedButton Invio, Annulla, Termina, NuovaPartita;
 	private JPanel GrigliaGioco, ContBtn;
@@ -66,7 +68,61 @@
 
 	public CampoGioco(int dim,String nome){
 
+
+
+		//======================================================================================================
+		// CREAZIONE LABEL UTENTE
+		//======================================================================================================
 		nome_utenti=nome;
+		Utente=new JLabel(nome_utenti);
+		Utente.setFont(new Font("MV Boli", Font.BOLD, 35));
+		Utente.setBounds(30, 30, 200,30);
+
+		//======================================================================================================
+		// CREAZIONE LABEL PUNTEGGIO FINALE
+		//======================================================================================================
+		//String.valueOf(totPunteggio)
+		class label extends JLabel{
+			@Override
+			public void paintComponent(Graphics g) {
+				super.paintComponent(g);
+
+				int arcRadius = 20; // Raggio dell'arrotondamento dei bordi
+
+				Graphics2D g2 = (Graphics2D) g.create();
+				g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
+
+				int x = 0;
+				int y = 0;
+				int width = getWidth();
+				int height = getHeight();
+
+				// Disegna il rettangolo con i bordi stondati
+				RoundRectangle2D roundedRect = new RoundRectangle2D.Double(x, y, width, height, arcRadius, arcRadius);
+				g2.setColor(Color.RED); // Colore del pannello
+				g2.fill(roundedRect);
+
+				g2.dispose();
+				g.setColor(Color.BLACK);
+				//g.setFont(new Font("Arial", Font.BOLD, 16));
+
+				g.drawString("Esempio di testo", 10, 20);
+
+			}
+		}
+		//String.valueOf(totPunteggio)
+		Punteggio = new label();
+		Punteggio.setText(String.valueOf(totPunteggio));
+		Punteggio.setFont(new Font("MV Boli", Font.BOLD, 35));
+		Punteggio.setOpaque(false); // Imposta la proprietà opaca su true per rendere visibile il colore di sfondo
+		//Punteggio.setBackground(Color.BLACK);
+		Punteggio.setBounds(1150, 600, 301,60);
+		Punteggio.setHorizontalAlignment(Punteggio.CENTER);
+		Punteggio.setVerticalAlignment(Punteggio.CENTER);
+		Punteggio.setForeground(Color.WHITE);
+
+
+
 
 		this.setTitle("Campo da Gioco");
 		this.setSize(1500, 800);
@@ -328,7 +384,7 @@
 
 		timeLabel = new JLabel("00:00");
 		timeLabel.setFont(new Font("MV Boli", Font.BOLD, 35));
-		timeLabel.setBounds(30, 30, 200,40);
+		timeLabel.setBounds(200, 30, 200,40);
 
 		timer = new Timer(1000, new ActionListener() {
 			public void actionPerformed(ActionEvent e) {
@@ -369,6 +425,8 @@
 		// IMPOSTAZIONI FRAME
 		//======================================================================================================
 
+		this.add(Punteggio);
+		this.add(Utente);
 		this.add(labelTitolo);
 		this.add(GrigliaGioco);
 		this.add(ContBtn);
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"176fe9ab-5033-4136-ac6c-a795ad7ab536\" name=\"Changes\" comment=\"aggiunta icona\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/model/Query.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/model/Query.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/view/CampoGioco.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/view/CampoGioco.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/view/HomePage.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/view/HomePage.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/view/PageStatistiche.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/view/PageStatistiche.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ComposerSettings\">\r\n    <execution />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"RESET_MODE\" value=\"HARD\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"e6b6e71a-6328-4b90-9e0c-ea04bcd5c5de\" />\r\n        <option name=\"url\" value=\"https://github.com/NicolaSannino/Il_Paroliere_.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2L6RmBRJinVOSYnhfaY42B11D2a\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/alber/IdeaProjects/Il_Paroliere_/file&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\alber\\IdeaProjects\\Il_Paroliere_\\file\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunAnythingCache\">\r\n    <option name=\"myCommands\">\r\n      <command value=\"JTe\" />\r\n    </option>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"176fe9ab-5033-4136-ac6c-a795ad7ab536\" name=\"Changes\" comment=\"\" />\r\n      <created>1675189711879</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1675189711879</updated>\r\n      <workItem from=\"1675189713685\" duration=\"605000\" />\r\n      <workItem from=\"1675190401634\" duration=\"5000\" />\r\n      <workItem from=\"1675763700181\" duration=\"408000\" />\r\n      <workItem from=\"1676367942818\" duration=\"3722000\" />\r\n      <workItem from=\"1676453329761\" duration=\"1679000\" />\r\n      <workItem from=\"1678183396337\" duration=\"5927000\" />\r\n      <workItem from=\"1678262813504\" duration=\"79000\" />\r\n      <workItem from=\"1678263433344\" duration=\"94000\" />\r\n      <workItem from=\"1678364963911\" duration=\"52000\" />\r\n      <workItem from=\"1679392560859\" duration=\"1647000\" />\r\n      <workItem from=\"1679568085707\" duration=\"2321000\" />\r\n      <workItem from=\"1679577587697\" duration=\"2386000\" />\r\n      <workItem from=\"1679740515344\" duration=\"1992000\" />\r\n      <workItem from=\"1679744010567\" duration=\"3995000\" />\r\n      <workItem from=\"1679998306414\" duration=\"15000\" />\r\n      <workItem from=\"1679998475602\" duration=\"50000\" />\r\n      <workItem from=\"1680825823049\" duration=\"2035000\" />\r\n      <workItem from=\"1680968047259\" duration=\"499000\" />\r\n      <workItem from=\"1680970373998\" duration=\"2572000\" />\r\n      <workItem from=\"1681298028703\" duration=\"2047000\" />\r\n      <workItem from=\"1681810933689\" duration=\"271000\" />\r\n      <workItem from=\"1681894489699\" duration=\"481000\" />\r\n      <workItem from=\"1681894998192\" duration=\"1616000\" />\r\n      <workItem from=\"1681976898413\" duration=\"1751000\" />\r\n      <workItem from=\"1682098781489\" duration=\"812000\" />\r\n      <workItem from=\"1682105099688\" duration=\"1555000\" />\r\n      <workItem from=\"1683019911432\" duration=\"572000\" />\r\n      <workItem from=\"1683021305821\" duration=\"1136000\" />\r\n      <workItem from=\"1683716204225\" duration=\"347000\" />\r\n      <workItem from=\"1683730700479\" duration=\"7306000\" />\r\n      <workItem from=\"1683790313062\" duration=\"320000\" />\r\n      <workItem from=\"1683790675121\" duration=\"1209000\" />\r\n      <workItem from=\"1683791910821\" duration=\"6443000\" />\r\n      <workItem from=\"1683807341241\" duration=\"954000\" />\r\n      <workItem from=\"1683822937891\" duration=\"6385000\" />\r\n      <workItem from=\"1683908937621\" duration=\"4688000\" />\r\n      <workItem from=\"1683978584694\" duration=\"3534000\" />\r\n      <workItem from=\"1684002176052\" duration=\"2973000\" />\r\n      <workItem from=\"1684179959940\" duration=\"832000\" />\r\n      <workItem from=\"1684219377233\" duration=\"8805000\" />\r\n      <workItem from=\"1684232940030\" duration=\"1750000\" />\r\n      <workItem from=\"1684251710581\" duration=\"189000\" />\r\n      <workItem from=\"1684252307397\" duration=\"2020000\" />\r\n      <workItem from=\"1684305715703\" duration=\"1669000\" />\r\n      <workItem from=\"1684312117626\" duration=\"595000\" />\r\n      <workItem from=\"1684392226305\" duration=\"8872000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Prima matrice\">\r\n      <created>1676454368951</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1676454368951</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"seconda matrice\">\r\n      <created>1678184374622</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1678184374622</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"nuova grafica 1\">\r\n      <created>1680826545869</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680826545869</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"implementazione matrice in campo gioco\">\r\n      <created>1680827086135</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680827086135</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"implementazione matrice in campo gioco 2\">\r\n      <created>1680827207273</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680827207273</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"implementazione matrice in campo gioco 3\">\r\n      <created>1680827346757</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680827346757</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"commit view\">\r\n      <created>1680827474015</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680827474015</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"commit aggiornamento\">\r\n      <created>1680827699161</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680827699161</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"commit aggiornamento box ins parola\">\r\n      <created>1681978650188</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681978650188</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"commit sistemazione grafica\">\r\n      <created>1683734949595</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683734949595</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"commit sistemazione grafica 2\">\r\n      <created>1683738209501</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683738209501</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"sistemazione btn on off\">\r\n      <created>1683796420971</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683796420971</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"sistemazione tutto\">\r\n      <created>1683831465335</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683831465335</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"implementazione algoritmo creazione tabella\">\r\n      <created>1684224336961</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684224336961</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"implementazione algoritmo creazione tabella2\">\r\n      <created>1684224651628</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684224651628</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"creazione tab stat\">\r\n      <created>1684234459319</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684234459319</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"aggiunta icona\">\r\n      <created>1684306963385</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684306963385</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"18\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"master\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Prima matrice\" />\r\n    <MESSAGE value=\"seconda matrice\" />\r\n    <MESSAGE value=\"nuova grafica 1\" />\r\n    <MESSAGE value=\"implementazione matrice in campo gioco\" />\r\n    <MESSAGE value=\"implementazione matrice in campo gioco 2\" />\r\n    <MESSAGE value=\"implementazione matrice in campo gioco 3\" />\r\n    <MESSAGE value=\"commit view\" />\r\n    <MESSAGE value=\"commit aggiornamento\" />\r\n    <MESSAGE value=\"commit aggiornamento box ins parola\" />\r\n    <MESSAGE value=\"commit sistemazione grafica\" />\r\n    <MESSAGE value=\"commit sistemazione grafica 2\" />\r\n    <MESSAGE value=\"sistemazione btn on off\" />\r\n    <MESSAGE value=\"sistemazione tutto\" />\r\n    <MESSAGE value=\"implementazione algoritmo creazione tabella\" />\r\n    <MESSAGE value=\"implementazione algoritmo creazione tabella2\" />\r\n    <MESSAGE value=\"creazione tab stat\" />\r\n    <MESSAGE value=\"aggiunta icona\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"aggiunta icona\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 42d6402723fcf8766c7f8c2c8f151d634f798d88)
+++ b/.idea/workspace.xml	(date 1684412785834)
@@ -4,12 +4,9 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="176fe9ab-5033-4136-ac6c-a795ad7ab536" name="Changes" comment="aggiunta icona">
+    <list default="true" id="176fe9ab-5033-4136-ac6c-a795ad7ab536" name="Changes" comment="Aggiunta Utente">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/model/Query.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/model/Query.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/view/CampoGioco.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/view/CampoGioco.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/view/HomePage.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/view/HomePage.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/view/PageStatistiche.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/view/PageStatistiche.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -134,7 +131,8 @@
       <workItem from="1684252307397" duration="2020000" />
       <workItem from="1684305715703" duration="1669000" />
       <workItem from="1684312117626" duration="595000" />
-      <workItem from="1684392226305" duration="8872000" />
+      <workItem from="1684392226305" duration="11714000" />
+      <workItem from="1684408949490" duration="3793000" />
     </task>
     <task id="LOCAL-00001" summary="Prima matrice">
       <created>1676454368951</created>
@@ -255,7 +253,14 @@
       <option name="project" value="LOCAL" />
       <updated>1684306963385</updated>
     </task>
-    <option name="localTasksCounter" value="18" />
+    <task id="LOCAL-00018" summary="Aggiunta Utente">
+      <created>1684402167487</created>
+      <option name="number" value="00018" />
+      <option name="presentableId" value="LOCAL-00018" />
+      <option name="project" value="LOCAL" />
+      <updated>1684402167487</updated>
+    </task>
+    <option name="localTasksCounter" value="19" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -302,6 +307,7 @@
     <MESSAGE value="implementazione algoritmo creazione tabella2" />
     <MESSAGE value="creazione tab stat" />
     <MESSAGE value="aggiunta icona" />
-    <option name="LAST_COMMIT_MESSAGE" value="aggiunta icona" />
+    <MESSAGE value="Aggiunta Utente" />
+    <option name="LAST_COMMIT_MESSAGE" value="Aggiunta Utente" />
   </component>
 </project>
\ No newline at end of file
